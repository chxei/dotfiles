# Alias section
alias open="xdg-open"
alias cp="cp -i"                                                # Confirm before overwriting something
alias df='df -h'                                                # Human-readable sizes
alias free='free -m'                                            # Show sizes in MB
alias gitu='git add . && git commit && git push'
alias exa='exa --time-style=long-iso -alh'
alias ll='ls -allh'
alias ls='ls -h --color=auto'
alias pacpurge='sudo pacman -Rsn $(pacman -Qdtq)'
alias pacpuurge='sudo pacman -Rsn $(pacman -Qdttq)'
alias vim='nvim'
alias cat='bat'
alias grep="grep --color=auto"
alias recvkeys='gpg --keyserver keys.gnupg.net --recv-keys'
alias zrc='code ~/.config/.zshrc'
alias cpumonitor='watch -n.1 "cat /proc/cpuinfo | grep \"^[c]pu MHz\""'
alias screenon='xrandr --output HDMI-A-0 --primary --mode 1920x1080 --refresh 144.00 --output eDP --left-of HDMI-A-0; xset dpms force on;'
alias screenoff='xrandr --output HDMI-A-0 --off --output eDP --primary; sleep 3; xset dpms force off'
alias prime-run='__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia'
alias fnano='fzf_find_edit nano'
alias fkate='fzf_find_edit kate'
alias fcode='fzf_find_edit code'
alias z='z -I'
alias \?='duckduckgo'


duckduckgo ()
{
    urlencode()
        {
            local args="$@"
            jq -nr --arg v "$args" '$v|@uri';
        }
  lynx "https://lite.duckduckgo.com/lite/?q=$(urlencode "$@")"
}


fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}
fhistory(){
    fh
}
gitlog() {
    local selections=$(
      git ll --color=always "$@" |
        fzf --ansi --no-sort --no-height \
            --preview "echo {} | grep -o '[a-f0-9]\{7\}' | head -1 |
                       xargs -I@ sh -c 'git show --color=always @'"
      )
    if [[ -n $selections ]]; then
        local commits=$(echo "$selections" | sed 's/^[* |]*//' | cut -d' ' -f1 | tr '\n' ' ')
        git show $commits
    fi
}
gitadd() {
    local selections=$(
      git status --porcelain | \
      fzf --ansi \
          --preview 'if (git ls-files --error-unmatch {2} &>/dev/null); then
                         git diff --color=always {2}
                     else
                         bat --color=always --line-range :500 {2}
                     fi'
      )
    if [[ -n $selections ]]; then
        local files=$(echo "$selections" | cut -c 4- | tr '\n' ' ')
        git add --verbose $files
    fi
}
fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi
}
fcd() {
    local directory=$(
      fd --type d | \
      fzf --query="$1" --no-multi --select-1 --exit-0 \
          --preview 'tree -C {} | head -100'
      )
    if [[ -n $directory ]]; then
        cd "$directory"
    fi
}
fzf_find_edit() {
    local file=$(fzf --query="$2" --no-multi --select-1 --exit-0 --preview 'bat --color=always --line-range :500 {}' )
    if [[ -n $file ]]; then
        $1 "$file"
    fi
}

grub-update(){
    if [[ "$(uname -n)" == 'fedora' ]]; then
        sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg;
    else
        sudo grub2-mkconfig -o "$(readlink -e /etc/grub2-efi.cfg)";
        sudo grub2-mkconfig -o "$(readlink -e /etc/grub2.cfg)";
    fi
}
update-all(){
    sudo flatpak update -y;
    sudo snap refresh;
    sudo dnf upgrade --refresh -y;
    sdk update;
    sdk upgrade;
    sudo fwupdmgr update;
    cd $ZSH_PLUGINS;
    ls -d */ | xargs -I{} git -C {} reset --hard;
    ls -d */ | xargs -I{} git -C {} pull;
    cd ~;
    grub-update;
}
clean-all(){
    sudo dnf autoremove -y;
    sudo dnf remove --duplicates -y;
    sudo dnf remove --oldinstallonly -y;
    sudo dnf clean all -y;
    flatpak uninstall --unused;
    sdk flush;
    sudo journalctl --rotate --vacuum-size=500M;
    rm -rf ~/.thumbnails/*
    rm -rf ~/.wget-hsts;
    rm -rf ~/.xsession-errors*;
    rm -rf ~/.lesshs*;
}
clean-memory(){
    sudo sync;
    echo 3 | sudo tee -a /proc/sys/vm/drop_caches;
    sudo swapoff -a;
    sudo swapon -a;
    echo 0 > sudo tee -a /sys/module/zswap/parameters/enabled;
}
